sudo: true
language: bash
services:
  - docker

before_install:
  - docker -v
  - docker-compose -v
  - echo $TRAVIS_COMMIT
  - export ECR_REPOSITORY=keboola/serverless-demo-app
  - export ECR_REGISTRY="061240556736.dkr.ecr.us-east-1.amazonaws.com/${ECR_REPOSITORY}"
  - export ECR_TAG=stage-$TRAVIS_COMMIT

jobs:
  include:
    - stage: build and push
      before_script:
        - eval $(docker run --rm -i -e AWS_ACCESS_KEY_ID=$ECR_AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$ECR_AWS_SECRET_ACCESS_KEY quay.io/keboola/aws-cli ecr get-login --region us-east-1 --no-include-email)
        - docker pull $ECR_REPOSITORY:cache || true
        - docker build --cache-from $ECR_REPOSITORY:cache -t $ECR_REPOSITORY .
        - docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY:cache
        - docker push $ECR_REGISTRY:cache
        - docker build -t $ECR_REPOSITORY .
        - docker tag $ECR_REPOSITORY:latest "${ECR_REGISTRY}:${ECR_TAG}"
        - docker push "${ECR_REGISTRY}:${ECR_TAG}"
      script: skip

    - stage: lint
      before_script:
        - eval $(docker run --rm -i -e AWS_ACCESS_KEY_ID=$ECR_AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$ECR_AWS_SECRET_ACCESS_KEY quay.io/keboola/aws-cli ecr get-login --region us-east-1 --no-include-email)
        - docker pull "${ECR_REGISTRY}:${ECR_TAG}"
      script:
        - docker run --rm "${ECR_REGISTRY}:${ECR_TAG}" yarn test:lint

    - stage: unit and integration tests
      before_script:
        - eval $(docker run --rm -i -e AWS_ACCESS_KEY_ID=$ECR_AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$ECR_AWS_SECRET_ACCESS_KEY quay.io/keboola/aws-cli ecr get-login --region us-east-1 --no-include-email)
        - docker pull "${ECR_REGISTRY}:${ECR_TAG}"
      script:
        - >-
          docker run --rm
          -e "AWS_ACCESS_KEY_ID=accessKey"
          -e "AWS_SECRET_ACCESS_KEY=secretKey"
          -e "REGION=us-east-1"
          -e CC_TEST_REPORTER_ID
          "${ECR_REGISTRY}:${ECR_TAG}" yarn test:unit

    - stage: deploy to testing
      before_script:
        - eval $(docker run --rm -i -e AWS_ACCESS_KEY_ID=$ECR_AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$ECR_AWS_SECRET_ACCESS_KEY quay.io/keboola/aws-cli ecr get-login --region us-east-1 --no-include-email)
        - docker pull "${ECR_REGISTRY}:${ECR_TAG}"
      script:
        - >-
          docker run --rm
          -e "AWS_ACCESS_KEY_ID=${CI_DEPLOY_AWS_ACCESS_KEY_ID}"
          -e "AWS_SECRET_ACCESS_KEY=${CI_DEPLOY_AWS_SECRET_ACCESS_KEY}"
          -e "CLOUDFORMATION_ROLE_ARN=arn:aws:iam::061240556736:role/ci-serverless-demo-app-us-east-1-sls-cf"
          -e "LAMBDA_EXECUTION_ROLE_ARN=arn:aws:iam::061240556736:role/ci-serverless-demo-app-us-east-1-sls-exec"
          -e "KEBOOLA_STACK_TAG=serverless-demo-app"
          -e "REGION=us-east-1"
          -e "SERVICE_NAME=ci-serverless-demo-app"
          -e "STAGE=test"
          "${ECR_REGISTRY}:${ECR_TAG}" serverless deploy --force

    - stage: functional tests
      before_script:
        - eval $(docker run --rm -i -e AWS_ACCESS_KEY_ID=$ECR_AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$ECR_AWS_SECRET_ACCESS_KEY quay.io/keboola/aws-cli ecr get-login --region us-east-1 --no-include-email)
        - docker pull "${ECR_REGISTRY}:${ECR_TAG}"
      script:
        - >-
          docker run --rm
          -e "API_ENDPOINT=https://l51snajwd5.execute-api.us-east-1.amazonaws.com/test"
          -e "AWS_ACCESS_KEY_ID=${TEST_AWS_ACCESS_KEY_ID}"
          -e "AWS_SECRET_ACCESS_KEY=${TEST_AWS_SECRET_ACCESS_KEY}"
          -e "REGION=us-east-1"
          -e "SERVICE_NAME=ci-serverless-demo-app"
          -e "STAGE=test"
          "${ECR_REGISTRY}:${ECR_TAG}" yarn test:func

#    - stage: deploy to production
#      before_script:
#        - eval $(docker run --rm -i -e AWS_ACCESS_KEY_ID=$ECR_AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$ECR_AWS_SECRET_ACCESS_KEY quay.io/keboola/aws-cli ecr get-login --region us-east-1 --no-include-email)
#        - docker pull "${ECR_REGISTRY}:${ECR_TAG}"
#      script:
#        - >-
#          docker run --rm
#          -e "AWS_ACCESS_KEY_ID=${PROD_DEPLOY_AWS_ACCESS_KEY_ID}"
#          -e "AWS_SECRET_ACCESS_KEY=${PROD_DEPLOY_AWS_SECRET_ACCESS_KEY}"
#          -e "CLOUDFORMATION_ROLE_ARN="
#          -e "LAMBDA_EXECUTION_ROLE_ARN="
#          -e "KEBOOLA_STACK_TAG=serverless-demo-app"
#          -e "REGION=us-east-1"
#          -e "SERVICE_NAME=serverless-demo-app"
#          -e "STAGE=prod"
#          "${ECR_REGISTRY}:${ECR_TAG}" serverless deploy --force
#      if: (branch = master)
