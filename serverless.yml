org: keboola
app: serverless-demo-app
service: ${env:SERVICE_NAME}

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true
    forceExclude:
      - aws-sdk
      - serverless
    packager: 'yarn'
  cors:
    origin: '*'
    headers:
      - Content-Type
      - X-StorageApi-Token
      - X-Amz-Date
      - X-Amz-Security-Token
      - X-Amz-User-Agent
    allowCredentials: false

provider:
  name: aws
  runtime: nodejs12.x
  region: ${env:REGION}
  stage: ${env:STAGE}
  memorySize: 128
  timeout: 60
  versionFunctions: false
  tracing:
    apiGateway: true
    lambda: true
  deploymentBucket:
    name: "${env:SERVICE_NAME}-${env:REGION}-deployment"
  cfnRole: ${env:CLOUDFORMATION_ROLE_ARN}
  role: ${env:LAMBDA_EXECUTION_ROLE_ARN}
  stackTags:
    KeboolaStack: ${env:KEBOOLA_STACK_TAG}
  environment:

plugins:
  - '@keboola/serverless-default-error-responses'
  - serverless-offline
  - serverless-webpack

package:
  individually: true
  include:
    - src/**
    - node_modules/**
  exclude:
    - .codeclimate.yml
    - .env
    - .env.template
    - .eslintignore
    - .eslintrc.json
    - .git/**
    - .gitignore
    - .travis.yml
    - cf-stack.json
    - docker-compose.yml
    - Dockerfile
    - LICENSE
    - README.md
    - yarn.lock
    - test/**

functions:

  handler:
    handler: src/lambda.handler
    tags:
      KeboolaStack: ${env:KEBOOLA_STACK_TAG}
    events:
      - http:
          method: get
          path: "/"
          cors: ${self:custom.cors}
